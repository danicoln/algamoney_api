#spring.jpa.database=POSTGRESQL
#spring.database.driverClassName=org.postgresql.Driver
##spring.jpa.hibernate.ddl-auto=update // Com o flyway, nao e necessario a config para atualizar as tabelas.
#spring.datasource.plataform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/algamoney_api
#spring.datasource.username=postgres
#spring.datasource.password=admin

#ativa o app.properties
spring.profiles.active=basic-security
spring.profiles.group.prod=oauth-security

spring.jpa.database=MYSQL
spring.datasource.url=jdbc:mysql://localhost/algamoney_api?createDatabaseIfNotExist=true&useSSL=false
spring.database.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=${PASSWORD_MYSQL}

spring.jpa.show-sql=true

##flyway
spring.flyway.enabled=true
spring.flyway.baselineOnMigrate=true
server.error.include-message=always
server.error.include-binding-errors=always

# configuracao no jackson da deserializacao de uma string para um objeto java
## Dependendo da regra de negocio, esta config serve para que o usuario nao insira novos atributos
spring.jackson.deserialization.fail-on-unknown-properties=true

#Ref. Notas da aula 6.3
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8080/oauth/check_token
spring.security.oauth2.resourceserver.opaquetoken.client-id=angular
spring.security.oauth2.resourceserver.opaquetoken.client-secret=@ngul@r0